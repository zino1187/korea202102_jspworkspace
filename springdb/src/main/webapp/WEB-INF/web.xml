<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>springdb</display-name>
	
	<!-- 서버가 가동될때,  ServletContext 인 application내장 객체에 원하는 메시지 심기 
		즉, 이렇게 ServletContext 수준으로 스프링빈을 관리할 경우, 모든 서블릿에서 공통적으로 접근이 가능하다
		따라서 비즈니스 로직 등의 모델파트의 빈들은 ServletContext가 관리하는 ApplicationContext에 등록하자
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/root-context.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>		
		</init-param>
	</filter>
		
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	
	
	<!-- 어플리케이션의 규모가 커질 경우, 요청을 처리하는 DispatcherServlet 클래스는 여러개 둘 수도 있다 -->
	<servlet>
		<servlet-name>clientServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/client-context.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>clientServlet</servlet-name>
		<url-pattern>/client/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>adminServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/admin-context.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>adminServlet</servlet-name>
		<url-pattern>/admin/*</url-pattern>
	</servlet-mapping>

		
</web-app>















