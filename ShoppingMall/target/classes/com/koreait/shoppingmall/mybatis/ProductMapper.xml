<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Product">
	
	<insert id="insert" parameterType="Product">
		insert into product(subcategory_id, product_name, brand, price, info, product_img)
		values(#{subcategory_id},#{product_name},#{brand},#{price},#{info},#{product_img})
	</insert>	
	
	<select id="selectAll" resultType="Product">
		select * from product order by product_id desc
	</select>	
	
	<!-- 하위 카테고리에 소속된 상품 목록  -->
	<select id="selectBySubCategory" parameterType="int" resultType="Product">
		select * from product where subcategory_id=#{subcategory_id}	
	</select>

	<!-- 상품상세 정보-->
	<!-- 자동매핑에 의존하지 못할 경우, 개발자가 매핑을 수동으로 조절해야 될 경우가 있다..이때 사용하는 태그가 resultMap -->
	<resultMap type="Product" id="ProductSubCategory">
		<id column="product_id" 						property="product_id"/>	
		<result column="product_name" 			property="product_name"/>	
		<result column="brand" 						property="brand"/>	
		<result column="price" 							property="price"/>	
		<result column="info" 							property="info"/>	
		<result column="product_img" 				property="product_img"/>	
		<association column="subcategory_id" 	property="subCategory" javaType="SubCategory" 
			select="SubCategory.select"/>
	</resultMap>
	
	<!-- 아래의 쿼리는 Product에 대해서만 매핑이 일어나므로, subcategory에 대한 매핑을 위해서는 개발자가 직접 명시해야 한다 -->
	<select id="select" parameterType="int" resultMap="ProductSubCategory">
		select s.subcategory_id as subcategory_id , sub_name
		, product_id, product_name, brand, price, info, product_img
		from subcategory s, product p 
		where s.subcategory_id  = p.subcategory_id 
		and product_id=#{product_id}		
	</select>
	
	<delete id="delete" parameterType="int">
		delete from product where product_id=#{product_id}
	</delete>
	
	
	
</mapper>












